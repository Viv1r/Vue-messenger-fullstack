/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////// MESSENGER API ///////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

1. POST register
   Принимает тело формата {username: String, password: String, displayName: String}
   Успех: респонс status: "REGISTERED"
   Иначе: респонс с текстом ошибок в виде массива (status: "ERROR", errors: []), вывести их на экран
   
2. POST login
   Принимает тело формата {username: String, password: String}
   Успех: респонс status: "LOGGED_IN"
   Иначе: респонс с текстом ошибок в виде массива (status: "ERROR", errors: []), вывести их на экран

3. POST getChats
   Запрос не имеет тела, работа только с куки ('userhash'). Если такого юзера нет, возвращает ошибку и обнуляет куки.
   Возвращает массив объектов формата [{id: Number, name: String, lastMessage: {sender: Number, text: String, datetime: String}].
   
4. POST seekMessages
   Запрос не имеет тела, работа только с куки ('userhash'). Если такого юзера нет, возвращает ошибку и обнуляет куки.
   Ждёт, пока юзеру не отправят сообщение. Как только сообщение появляется
   - возвращает массив объектов формата [{chatid: Number, messages: [...]}, {}, {}, ...]
   
5. POST sendMessage
   Принимает тело формата {recipient: id (Number), text: String}
   На основе куки определяет айди отправителя, отправляет сообщение и кидает айди получателя в массив gotMessages.
   Успех: респонс status: "SENT"
   Иначе: респонс с текстом ошибок в виде массива (status: "ERROR", errors: []), вывести их над строкой ввода... наверное.